using System;

public struct Complex
{
    public double Real { get; }
    public double Imaginary { get; }

    public Complex(double real, double imaginary)
    {
        Real = real;
        Imaginary = imaginary;
    }

    public override string ToString()
    {
        return $"{Real} + {Imaginary}i";
    }

    public override bool Equals(object obj)
    {
        if (obj is Complex)
        {
            Complex other = (Complex)obj;
            return Real == other.Real && Imaginary == other.Imaginary;
        }
        return false;
    }

    public static bool operator ==(Complex a, Complex b)
    {
        return a.Equals(b);
    }

    public static bool operator !=(Complex a, Complex b)
    {
        return !(a == b);
    }

    public static explicit operator Complex(double d)
    {
        return new Complex(d, 0);
    }

    public static Complex operator +(Complex a, Complex b)
    {
        return new Complex(a.Real + b.Real, a.Imaginary + b.Imaginary);
    }

    public static Complex operator -(Complex a, Complex b)
    {
        return new Complex(a.Real - b.Real, a.Imaginary - b.Imaginary);
    }

    public static Complex operator *(Complex a, Complex b)
    {
        double real = a.Real * b.Real - a.Imaginary * b.Imaginary;
        double imaginary = a.Real * b.Imaginary + a.Imaginary * b.Real;
        return new Complex(real, imaginary);
    }
}

class Program
{
    static void Main()
    {
        Complex complex1 = new Complex(2, 3);
        Console.WriteLine(complex1);

        Complex complex2 = complex1;
        Console.WriteLine(complex2);

        Console.WriteLine(complex1 == complex2); 
        Console.WriteLine(complex1 != complex2); 
    }
}

